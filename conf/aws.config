/*
 * ------------------------------------------------------------ *
 *	nf-merge-fastq v1.0.0 Nextflow config file
 * ------------------------------------------------------------ *
 */

aws {

	region = 'eu-central-1' // Adapt if the region is not eu-central-1 (Frankfurt)

	batch {
		cliPath = '/miniconda/bin/aws'
		maxParallelTransfers = 10

	}

	client {
		maxConnections = 10
	}

}


workDir = params.validation ?
	"s3://validation//work/" :
	"s3://production/work/


params {

	// Set outdir and reads
	inputFolder = params.validation ?
		"s3://validation/input/" :
		"s3://production/input/"
	outputFolder = params.validation ?
		"s3://validation/output/" :
		"s3://production/output/"
	referenceBase = params.validation ?
		"s3://validation/reference/" :
		"s3://production/reference/"

	//Set docker repository and tags for custom images
	containerRepository = params.validation ?
		"validation-tag.dkr.ecr.eu-central-1.amazonaws.com" :
		"production-tag.dkr.ecr.eu-central-1.amazonaws.com"
	containerValTag = params.validation ?
		"-dev" :
		""
	containerProdTag = params.validation ?
		"" :
		"v"
}

process {

	executor = 'awsbatch'
	queue = 'base'

	errorStrategy = { sleep(Math.pow(2, task.attempt - 1) * 100000 as long); return 'retry' }
	maxRetries = 5

	memory = { task.attempt< 5 ? task.attempt * 7.GB : 30.GB }
	cpus = { task.attempt < 3 ? task.attempt * 4 : 8 }

	withLabel: mid_memory {
		queue = 'med_mem'
		memory = { task.attempt < 4 ? task.attempt * 15.GB : 60.GB}
	}

	withLabel: high_memory {
		queue = 'high_mem'
		memory = { task.attempt < 5 ?  task.attempt * 40.GB : 160.GB }
		cpus = 8
	}

	withLabel: high_cpu {
		cpus = 8
	}

}